name: 🚀 Firebase CI/CD with Enhanced Notifications

on:
  push:
    branches: [main]
  workflow_dispatch:

env:
  FLUTTER_VERSION: "3.32.2"
  RUBY_VERSION: "3.2"

jobs:
  deploy:
    name: 🔄 Build, Distribute & Notify
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
      - name: 📥 Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: 🔧 Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          cache: true
          cache-key: flutter-pub-${{ hashFiles('**/pubspec.lock') }}

      - name: 📦 Install Dependencies
        run: |
          flutter pub get
          flutter precache --android

      - name: 🔐 Setup Environment
        run: |
          cat <<EOF > .env
          FIREBASE_APP_ID=${{ secrets.FIREBASE_APP_ID }}
          FIREBASE_CLI_TOKEN=${{ secrets.FIREBASE_CLI_TOKEN }}
          FIREBASE_RELEASE_NOTES=$(git log -1 --pretty=%B | sed 's/"/\\"/g')
          SENTRY_AUTH_TOKEN=${{ secrets.SENTRY_AUTH_TOKEN }}
          SENTRY_ORG=${{ secrets.SENTRY_ORG }}
          SENTRY_PROJECT=${{ secrets.SENTRY_PROJECT }}
          TELEGRAM_BOT_TOKEN=${{ secrets.TELEGRAM_BOT_TOKEN }}
          TELEGRAM_CHAT_ID=${{ secrets.TELEGRAM_CHAT_ID }}
          Firebase_TESTERS=${{ secrets.FIREBASE_TESTERS }}
          EOF

      - name: 🛠 Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: ${{ env.RUBY_VERSION }}
          bundler-cache: true

      - name: 🏗 Setup Fastlane
        run: |
          cd android
          bundle install

      - name: 🧩 Install Fastlane Plugins
        run: |
          cd android
          bundle exec fastlane install_plugins

      - name: 🚀 Firebase Distribution via Fastlane
        run: |
          cd android
          bundle exec fastlane firebase_distribution

      - name: 🔍 Get Release Info
        id: release_info
        run: |
          response=$(firebase appdistribution:releases:list \
            --app ${{ secrets.FIREBASE_APP_ID }} \
            --token ${{ secrets.FIREBASE_CLI_TOKEN }} \
            --limit 1 \
            --json)

          release_id=$(echo "$response" | jq -r '.releases[0].name' | cut -d'/' -f3)
          build_version=$(echo "$response" | jq -r '.releases[0].displayVersion')
          release_notes=$(echo "$response" | jq -r '.releases[0].releaseNotes.text')

          echo "release_id=$release_id" >> $GITHUB_OUTPUT
          echo "build_version=$build_version" >> $GITHUB_OUTPUT
          echo "release_notes<<EOF" >> $GITHUB_OUTPUT
          echo "$release_notes" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: 📊 Generate Artifacts
        run: |
          qrencode -o qr.png -s 10 -d 300 \
            "https://appdistribution.firebase.google.com/testerapps/${{ secrets.FIREBASE_APP_ID }}/releases/${{ steps.release_info.outputs.release_id }}"

          cat <<EOF > release-info.md
          ### 🚀 New Release Available!
          **Version:** ${{ steps.release_info.outputs.build_version }}
          **Release Notes:**
          ${{ steps.release_info.outputs.release_notes }}

          [Download APK](https://appdistribution.firebase.google.com/testerapps/${{ secrets.FIREBASE_APP_ID }}/releases/${{ steps.release_info.outputs.release_id }})
          EOF

      - name: 📤 Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: release-assets
          path: |
            qr.png
            release-info.md
            build/app/outputs/flutter-apk/app-release.apk
          retention-days: 7

      - name: 📨 Send Success Notification
        if: success()
        run: |
          curl -s -X POST "https://api.telegram.org/bot${{ secrets.TELEGRAM_BOT_TOKEN }}/sendMediaGroup" \
            -F chat_id="${{ secrets.TELEGRAM_CHAT_ID }}" \
            -F media='[
              {"type": "photo", "media": "attach://qr.png", "caption": "✅ *Build Success!*"},
              {"type": "document", "media": "attach://release-info.md"}
            ]' \
            -F qr.png=@qr.png \
            -F release-info.md=@release-info.md

      - name: 🚨 Send Failure Notification
        if: failure()
        run: |
          curl -s -X POST "https://api.telegram.org/bot${{ secrets.TELEGRAM_BOT_TOKEN }}/sendMessage" \
            -d chat_id="${{ secrets.TELEGRAM_CHAT_ID }}" \
            -d parse_mode="MarkdownV2" \
            -d text="❌ *Build Failed* \\[View Logs\\](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})"
