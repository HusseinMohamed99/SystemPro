name: üöÄ Firebase CI/CD with Telegram Notifications

on:
  push:
    branches:
      - main

jobs:
  deploy:
    name: üîÑ Build, Distribute & Notify
    runs-on: ubuntu-latest

    steps:
      - name: üì• Checkout Repository
        uses: actions/checkout@v4

      - name: üîß Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.32.2' # ÿπÿØŸëŸÑ ÿπŸÑŸâ ÿ≠ÿ≥ÿ® ÿ•ÿµÿØÿßÿ±ŸÉ

      - name: üì¶ Install Flutter dependencies
        run: flutter pub get

      - name: üìÅ Generate .env from GitHub Secrets
        run: |
          echo "FIREBASE_APP_ID=${{ secrets.FIREBASE_APP_ID }}" >> .env
          echo "FIREBASE_CLI_TOKEN=${{ secrets.FIREBASE_CLI_TOKEN }}" >> .env
          echo "FIREBASE_RELEASE_NOTES=${{ secrets.FIREBASE_RELEASE_NOTES }}" >> .env
          echo "SENTRY_AUTH_TOKEN=${{ secrets.SENTRY_AUTH_TOKEN }}" >> .env
          echo "SENTRY_ORG=${{ secrets.SENTRY_ORG }}" >> .env
          echo "SENTRY_PROJECT=${{ secrets.SENTRY_PROJECT }}" >> .env
          echo "TELEGRAM_BOT_TOKEN=${{ secrets.TELEGRAM_BOT_TOKEN }}" >> .env
          echo "TELEGRAM_CHAT_ID=${{ secrets.TELEGRAM_CHAT_ID }}" >> .env

      - name: üõ† Install Ruby, Bundler & Fastlane
        run: |
          sudo apt-get update
          sudo apt-get install -y ruby-full qrencode jq
          gem install --user-install bundler
          export PATH="$HOME/.local/share/gem/ruby/3.2.0/bin:$PATH"
          bundle config set --local path 'vendor/bundle'
          bundle install
        working-directory: android

      - name: üöÄ Distribute via Fastlane
        run: |
          export PATH="$HOME/.local/share/gem/ruby/3.2.0/bin:$PATH"
          cd android
          bundle exec fastlane firebase_distribution

      - name: üß† Get Latest Firebase Release ID
        id: get_release
        run: |
          latest_release=$(firebase appdistribution:releases:list \
            --app "${{ secrets.FIREBASE_APP_ID }}" \
            --token "${{ secrets.FIREBASE_CLI_TOKEN }}" \
            --limit 1 \
            --json | jq -r '.releases[0].name' | cut -d'/' -f3)
          echo "release_id=$latest_release" >> $GITHUB_OUTPUT

      - name: üì∏ Generate QR Code for Download Link
        run: |
          qrencode -o qr.png "https://appdistribution.firebase.google.com/testerapps/${{ secrets.FIREBASE_APP_ID }}/releases/${{ steps.get_release.outputs.release_id }}?utm_source=firebase-console"

      - name: ‚úÖ Send QR to Telegram
        if: success()
        run: |
          curl -s -X POST https://api.telegram.org/bot${{ secrets.TELEGRAM_BOT_TOKEN }}/sendPhoto \
            -F chat_id=${{ secrets.TELEGRAM_CHAT_ID }} \
            -F photo=@qr.png \
            -F caption="‚úÖ *Build Succeeded!* APK is ready!\nScan to install or click:\n[Install APK](https://appdistribution.firebase.google.com/testerapps/${{ secrets.FIREBASE_APP_ID }}/releases/${{ steps.get_release.outputs.release_id }})"

      - name: ‚ùå Notify Failure on Telegram
        if: failure()
        run: |
          curl -s -X POST https://api.telegram.org/bot${{ secrets.TELEGRAM_BOT_TOKEN }}/sendMessage \
            -d chat_id=${{ secrets.TELEGRAM_CHAT_ID }} \
            -d parse_mode=Markdown \
            -d text="‚ùå *Build Failed!* Please check logs here:\nüîó https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}"
