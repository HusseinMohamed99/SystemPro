include: package:flutter_lints/flutter.yaml

analyzer:
  errors:
    unrelated_type_equality_checks: ignore
    unused_import: ignore
    invalid_annotation_target: ignore
  plugins:
    - custom_lint

linter:
  rules:
    # Style and readability rules
    avoid_empty_else: true
    camel_case_types: true
    constant_identifier_names: true
    control_flow_in_finally: true
    directives_ordering: true
    file_names: true
    implementation_imports: true
    library_prefixes: true
    lines_longer_than_80_chars: true
    non_constant_identifier_names: true
    prefer_typing_uninitialized_variables: true
    sort_constructors_first: true
    unnecessary_brace_in_string_interps: true
    unnecessary_getters_setters: true
    avoid_print: true
    prefer_single_quotes: true
    sort_child_properties_last: true
    unawaited_futures: true
    no_self_assignments: true
    use_enums: true
    avoid_unused_constructor_parameters: true
    unnecessary_lambdas: true
    prefer_const_constructors: true
    always_use_package_imports: true
    prefer_final_fields: true
    annotate_overrides: true
    sort_pub_dependencies: true
    avoid_single_cascade_in_expression_statements: true
    prefer_const_declarations: true
    avoid_redundant_argument_values: true
    prefer_const_literals_to_create_immutables: true

    # Additional rules for better code quality
    empty_catches: true
    prefer_final_locals: true
    avoid_returning_null: true
    avoid_renaming_method_parameters: true
    avoid_shadowing_type_parameters: true
    avoid_types_as_parameter_names: true
    prefer_conditional_assignment: true
    prefer_is_empty: true
    prefer_is_not_empty: true
    prefer_null_aware_operators: true

dart_code_metrics:
  metrics-exclude:
    - test/**

  rules:
    - avoid-unnecessary-setstate
    - avoid-wrapping-in-padding
    - always-remove-listener